#!/bin/sh


#ID is the volume id / label of the PHOTON boot CD that will be looked for.
ID="PHOTON_VMWARE_CD"
TMP_MOUNT="/mnt"

PATH="/bin:/sbin:/usr/bin:/usr/sbin"

#this script searches for cdrom devices and then tries to find
#the PHOTON boot CD in order to mount it as / (rootfs)

#you need following programs:
#- /bin/sh (e.g. bash)
#- echo
#- [ (which is linked to test)
#- mount
#- umount
#- grep
#- pivot_root
#- chroot

#you need following devices:
#- /dev/hd*, /dev/sd*, /dev/sr* or /dev/cdrom*
#- /dev/null

#you need following directories:
#- /proc
#- $TMP_MOUNT

CHECK_TYPE="try_mount"

if [ ! -d "/proc/" ]; then
  mkdir /proc
fi

mount -n proc /proc -t proc

#1. Create a list of possible cdrom devices.

CDROM_LIST="/dev/sr0 /dev/sr1 /dev/cdrom /dev/hda /dev/hdb /dev/hdc /dev/hdd
/dev/hde /dev/sda /dev/sdb"

#2. now we try to find the PHOTON boot CD (we use ID as identification)

PHOTON_CDROM_DEVICE=""
echo "Using $CHECK_TYPE"
for cdrom_device in $CDROM_LIST
do
  echo -n "Checking $cdrom_device ... "

  if [ "$CHECK_TYPE" = "try_mount" ]; then
    mount -n -t iso9660 $cdrom_device $TMP_MOUNT > /dev/null 2>&1
    media_found=$?
  fi

  if [ $media_found -eq 0 ]; then

    echo -n "media found"
    if [ "$CHECK_TYPE" = "try_mount" ]; then
      [ -e "$TMP_MOUNT/$ID" ]
      media_photon=$?
    fi

    if [ "$CHECK_TYPE" = "try_mount" ]; then
      umount -n $cdrom_device > /dev/null 2>&1
    fi

    if [ $media_photon -eq 0 ]; then
      echo ", PHOTON boot CD found. Ready!"
      PHOTON_CDROM_DEVICE="$cdrom_device"
      break;
    else
      echo ", not PHOTON boot CD."
    fi

  else
    echo "no media "
  fi
done


#3. mount PHOTON CD as / (root fs)
if [ "$PHOTON_CDROM_DEVICE" = "" ]; then

  echo "No PHOTON boot CD found!!!  You will have to fix this to continue"
  echo "do: mount -n -o ro -t iso9660 'your cd device' $TMP_MOUNT"
  echo "Then exit shell to continue"
  bash

else

  echo "Booting from $PHOTON_CDROM_DEVICE ...                  "

  mount -n -o ro -t iso9660 $PHOTON_CDROM_DEVICE $TMP_MOUNT

  cd $TMP_MOUNT
  pivot_root . mnt
  mount -t proc proc /proc 
  exec /usr/sbin/chroot . sh -c 'umount /mnt/proc >/dev/null 2>&1;umount /mnt/dev;umount /mnt;exec -a init.new /lib/systemd/systemd' <dev/console > dev/console 2>&1
#umount /mnt/proc;umount /mnt/dev;umount /mnt;exec -a init.new /sbin/init 3' <dev/console >dev/console 2>&1

fi
