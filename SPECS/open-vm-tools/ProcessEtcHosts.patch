diff --git a/gosc-scripts/imc-shell/imgcust-scripts/CustomizationUtils.sh b/gosc-scripts/imc-shell/imgcust-scripts/CustomizationUtils.sh
index 4b18346..18e43ac 100755
--- a/gosc-scripts/imc-shell/imgcust-scripts/CustomizationUtils.sh
+++ b/gosc-scripts/imc-shell/imgcust-scripts/CustomizationUtils.sh
@@ -375,6 +375,87 @@

   local hostNameWasSet=0 #$(ProcessEtcHosts "$hostsFile" "$oldHostname" "$oldFQDN" "$newHostname" configFileVar output)

+  while read inpLine
+  do
+    # remove end char \n (chomp)
+    inpLine="${inpLine%\\n}"
+
+    Debug "Line (inp): $inpLine"
+
+    lineLength=${#inpLine}
+
+    # empty line
+    if [ $lineLength == 0 ]; then
+      Debug "Empty line. Ignored."
+      continue
+    fi
+
+    inpLine=$(Trim "$inpLine")
+
+    lineLength=${#inpLine}
+
+    # empty line
+    if [ $lineLength == 0 ]; then
+      Debug "Empty line. Ignored."
+      continue
+    fi
+
+    # comment
+    if [[ $inpLine == '#'* ]]; then
+      Debug "Comment found. Line ignored."
+      output="$output"$'\n'"$inpLine"
+      continue
+    fi
+
+    inpLine=$(GetLineWithoutComments "$inpLine")
+
+    if [[ $inpLine =~ ^[:space:]*([^[:space:]]+)(.*) ]]; then
+      Debug "yes: ${BASH_REMATCH[1]} : ${BASH_REMATCH[2]}"
+      isLoopback=${BASH_REMATCH[1]}
+      lineRest=${BASH_REMATCH[2]}
+      if [[ $isLoopback =~ 127.* ]]; then
+         # LOOPBACK - REPLACE all non-localhost old hostnames with new hostname
+         if [[ `echo $lineRest | grep -c $oldHostname` -gt 0 &&
+               $(ConfigFile_KeepCurrentValue "NETWORK|HOSTNAME") -eq 0 &&
+               $oldHostname != "localhost" &&
+               $oldHostname != "localhost.localdomain" ]]; then
+               Debug "Replacing oldHostname with new"
+               lineRest=${lineRest//$oldHostname/$newHostname}
+         fi
+         if [[ `echo $lineRest | grep -c $newHostname` -gt 0 ]]; then
+               # LOOPBACK with new hostname - REPLACE all old FQDN with new FQDN
+               if [[ $oldFQDN != $newHostname ]]; then
+                     Debug "Replacing oldFQDN with new"
+                     lineRest=${lineRest//$oldFQDN/$newFQDN}
+               fi
+               if [[ !($lineRest =~ ^$newFQDN[:space:]*) ]]; then
+                     # LOOPBACK with new hostname - INSERT new FQDN as first name
+                     Debug "Adding newFQDN at the begining"
+                     lineRest="$newFQDN"$'\t'"$lineRest"
+               fi
+               #Remove duplicate FQDNs
+               if [[ $lineRest =~ ([^[:space:]]+)(.*) ]]; then
+                     # LOOPBACK with new hostname - REMOVE duplicates of FQDN from aliases
+                     Debug "Remove duplicate FQDNs"
+                     fqdn=${BASH_REMATCH[1]}
+                     aliases=${BASH_REMATCH[2]}
+                     x="$(echo $aliases | sed "s/$fqdn//g")"
+                     lineRest="$fqdn"$'\t'"$x"
+               fi
+               hostNameWasSet=1
+         fi
+         newLine="$isLoopback"$'\t'"$lineRest"
+         output="$output"$'\n'"$newLine"
+      elif [[ `echo $inpLine | grep -c $oldHostname` == 0 && `echo $inpLine | grep -c $newHostname` == 0 ]]; then
+              Debug "Non loopback entry, adding without change"
+              output="$output"$'\n'"$inpLine"
+      fi
+    else
+      Debug "no: $inpLine"
+      output="$output"$'\n'"$inpLine"
+    fi
+  done <<<"$(cat $hostsFile)"
+
   # Add mapping to the customized static V4 ip
   local ipaddr=$(FindFirstStaticIpV4) || exit 1
   if [[ -n "$ipaddr" ]]; then
@@ -350,7 +430,7 @@ CustomizeHostsFileContent()
     fi
 
     hostNameWasSet=1
-    output="$output""$newStaticIPEntry"$'\n'
+    output="$output"$'\n'"$newStaticIPEntry"$'\n'
     Debug "Static ip entry '$newStaticIPEntry' added"
   fi
 
@@ -364,7 +444,7 @@ CustomizeHostsFileContent()
        newLine="$newLine $newHostname"$'\n'
     fi
 
-    output="$output""$newLine"$'\n'
+    output="$output"$'\n'"$newLine"$'\n'
     Debug "Loopback entry '$newLine' added"
   fi
 
@@ -388,18 +388,20 @@ CustomizeHostsFileContent()
 #   None
 CustomizeHostsFile()
 {
-  local oldHostname=$(OldHostNameCmd)
-  local oldFQDN=$(GetResolverFqdn)
+  local oldHostname=$1
+  local oldFQDN=$2
   local res=''
   Info "CHF"
   echo $oldHostname
   echo $oldFQDN
  
-  CustomizeHostsFileContent "" "$oldHostname" "$oldFQDN" "res"
+  CustomizeHostsFileContent "/etc/hosts" "$oldHostname" "$oldFQDN" "res"
 
   Debug "Patching /etc/hosts with [$res]"
   echo "${res}" > /etc/hosts
-  echo "127.0.0.1    localhost" >> /etc/hosts
+  if [[ `echo "$res" | grep -c "^127.0.0.1\+[[:space:]]\+localhost$"` == 0 ]]; then
+         echo "127.0.0.1    localhost" >> /etc/hosts
+  fi
 }
 
 # Detects interface name by MAC address out of 'ip addr show' output.
diff --git a/imc-shell/imgcust-scripts/PhotonCustomization.sh b/imc-shell/imgcust-scripts/PhotonCustomization.sh
index edd3632..7003eff 100755
--- a/gosc-scripts/imc-shell/imgcust-scripts/PhotonCustomization.sh
+++ b/gosc-scripts/imc-shell/imgcust-scripts/PhotonCustomization.sh
@@ -42,7 +42,12 @@
   else
     Exec "/usr/bin/timedatectl set-timezone $tz" '' ''
   fi
-  
+
+  local oldHostname=$(OldHostNameCmd)
+  Debug "Old Host Name : $oldHostname"
+  local oldFQDN=$(GetResolverFqdn)
+  Debug "Old FQDN : $oldFQDN"
+
   sleep 2
   rm -rf /var/lib/cloud/instance*
   rm -rf /var/lib/cloud/seed
@@ -59,7 +64,7 @@
 
   Exec '/bin/systemctl restart systemd-networkd' '' ''
   
-  CustomizeHostsFile
+  CustomizeHostsFile "$oldHostname" "$oldFQDN"
 
   if [[ $(ConfigFile_GetResetPassword) -eq 1 ]]; then
     Info "Resetting the password..."
