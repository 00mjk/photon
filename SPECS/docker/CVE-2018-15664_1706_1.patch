commit fb5a042d2469cc03948c34daa944ab208296796e
Author: Bo Gan <ganb@vmware.com>
Date:   Mon Jun 10 20:56:27 2019 -0700

    Add TarResourceRebaseOpts interface
    
    TarResourceRebaseOpts is added in docker/7a7357da
    It's a dependency for the rest of the patches for CVE-2018-15664
    
    Signed-off-by: Bo Gan <ganb@vmware.com>

diff --git a/components/engine/daemon/archive.go b/components/engine/daemon/archive.go
index dbef0b4..1880abd 100644
--- a/components/engine/daemon/archive.go
+++ b/components/engine/daemon/archive.go
@@ -170,7 +170,11 @@ func (daemon *Daemon) containerArchivePath(container *container.Container, path
 	// also catches the case when the root directory of the container is
 	// requested: we want the archive entries to start with "/" and not the
 	// container ID.
-	data, err := archive.TarResourceRebase(resolvedPath, filepath.Base(absPath))
+
+	sourceDir, sourceBase := archive.SplitPathDirEntry(resolvedPath)
+	opts := archive.TarResourceRebaseOpts(sourceBase, filepath.Base(absPath))
+
+	data, err := archive.TarWithOptions(sourceDir, opts)
 	if err != nil {
 		return nil, nil, err
 	}
diff --git a/components/engine/pkg/archive/copy.go b/components/engine/pkg/archive/copy.go
index 0614c67..b648183 100644
--- a/components/engine/pkg/archive/copy.go
+++ b/components/engine/pkg/archive/copy.go
@@ -106,19 +106,24 @@ func TarResourceRebase(sourcePath, rebaseName string) (content io.ReadCloser, er
 	// Separate the source path between its directory and
 	// the entry in that directory which we are archiving.
 	sourceDir, sourceBase := SplitPathDirEntry(sourcePath)
-
-	filter := []string{sourceBase}
+	opts := TarResourceRebaseOpts(sourceBase, rebaseName)
 
 	logrus.Debugf("copying %q from %q", sourceBase, sourceDir)
+	return TarWithOptions(sourceDir, opts)
+}
 
-	return TarWithOptions(sourceDir, &TarOptions{
+// TarResourceRebaseOpts does not preform the Tar, but instead just creates the rebase
+// parameters to be sent to TarWithOptions (the TarOptions struct)
+func TarResourceRebaseOpts(sourceBase string, rebaseName string) *TarOptions {
+	filter := []string{sourceBase}
+	return &TarOptions{
 		Compression:      Uncompressed,
 		IncludeFiles:     filter,
 		IncludeSourceDir: true,
 		RebaseNames: map[string]string{
 			sourceBase: rebaseName,
 		},
-	})
+	}
 }
 
 // CopyInfo holds basic info about the source
