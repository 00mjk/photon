From a11c3edfa41e7e4a4db323cdabfc2eae1b61da2a Mon Sep 17 00:00:00 2001
From: Brian Coca <bcoca@users.noreply.github.com>
Date: Thu, 6 Jun 2019 15:36:22 -0400
Subject: [PATCH] safe_eval fix (#57188)

* just dont pass locals

 - also fix globals
 - added tests

* fixed tests

(cherry picked from commit b9b0b230150eceb442c34c917d9e852d5e8b7371)
---
 changelogs/fragments/fix_safe_eval.yml        |  2 +
 lib/ansible/template/__init__.py              |  2 +-
 lib/ansible/template/safe_eval.py             |  8 ++-
 .../targets/netapp_eseries_host/tasks/run.yml |  4 +-
 .../targets/postgresql/tasks/main.yml         |  2 +-
 .../targets/template/corner_cases.yml         | 51 +++++++++++++++++++
 test/integration/targets/template/runme.sh    |  3 ++
 test/legacy/ovs.yaml                          |  4 +-
 8 files changed, 68 insertions(+), 8 deletions(-)
 create mode 100644 changelogs/fragments/fix_safe_eval.yml
 create mode 100644 test/integration/targets/template/corner_cases.yml

diff --git a/changelogs/fragments/fix_safe_eval.yml b/changelogs/fragments/fix_safe_eval.yml
new file mode 100644
index 0000000000000..19220b34ffb19
--- /dev/null
+++ b/changelogs/fragments/fix_safe_eval.yml
@@ -0,0 +1,2 @@
+bugfixes:
+    - Handle improper variable substitution that was happening in safe_eval, it was always meant to just do 'type enforcement' and have Jinja2 deal with all variable interpolation. Also see CVE-2019-10156
diff --git a/lib/ansible/template/__init__.py b/lib/ansible/template/__init__.py
index 19fb5204516e9..5535f53eea38d 100644
--- a/lib/ansible/template/__init__.py
+++ b/lib/ansible/template/__init__.py
@@ -501,7 +501,7 @@ def template(self, variable, convert_bare=False, preserve_trailing_newlines=True
                                 # if this looks like a dictionary or list, convert it to such using the safe_eval method
                                 if (result.startswith("{") and not result.startswith(self.environment.variable_start_string)) or \
                                         result.startswith("[") or result in ("True", "False"):
-                                    eval_results = safe_eval(result, locals=self._available_variables, include_exceptions=True)
+                                    eval_results = safe_eval(result, include_exceptions=True)
                                     if eval_results[1] is None:
                                         result = eval_results[0]
                                         if unsafe:
diff --git a/lib/ansible/template/safe_eval.py b/lib/ansible/template/safe_eval.py
index 3bbd3acbd4f85..32fc22cea89e4 100644
--- a/lib/ansible/template/safe_eval.py
+++ b/lib/ansible/template/safe_eval.py
@@ -42,10 +42,14 @@ def safe_eval(expr, locals=None, include_exceptions=False):
 
     # define certain JSON types
     # eg. JSON booleans are unknown to python eval()
-    JSON_TYPES = {
+    OUR_GLOBALS = {
+        '__builtins__': {},  # avoid global builtins as per eval docs
         'false': False,
         'null': None,
         'true': True,
+        # also add back some builtins we do need
+        'True': True,
+        'False': False,
     }
 
     # this is the whitelist of AST nodes we are going to
@@ -130,7 +134,7 @@ def generic_visit(self, node, inside_call=False):
         # Note: passing our own globals and locals here constrains what
         # callables (and other identifiers) are recognized.  this is in
         # addition to the filtering of builtins done in CleansingNodeVisitor
-        result = eval(compiled, JSON_TYPES, dict(locals))
+        result = eval(compiled, OUR_GLOBALS, dict(locals))
 
         if include_exceptions:
             return (result, None)
diff --git a/test/integration/targets/netapp_eseries_host/tasks/run.yml b/test/integration/targets/netapp_eseries_host/tasks/run.yml
index fd0a8d5fa2098..70519b4b94234 100644
--- a/test/integration/targets/netapp_eseries_host/tasks/run.yml
+++ b/test/integration/targets/netapp_eseries_host/tasks/run.yml
@@ -204,7 +204,7 @@
   set_fact:
     port_info: []
 - set_fact:
-    port_info: "{{ port_info }} + [{{ item[0] |combine(item[1]) }}]"
+    port_info: "{{ port_info + [item[0] |combine(item[1])] }}"
   loop: "{{ tmp }}"
 
 # Compile list of expected host port information for verifying changes
@@ -225,7 +225,7 @@
   set_fact:
     expected_port_info: []
 - set_fact:
-    expected_port_info: "{{ expected_port_info }} + [{{ item[0] |combine(item[1]) }}]"
+    expected_port_info: "{{ expected_port_info + [ item[0] |combine(item[1]) ] }}"
   loop: "{{ tmp }}"
 
 # Verify that each host object has the expected protocol type and address/port
diff --git a/test/integration/targets/postgresql/tasks/main.yml b/test/integration/targets/postgresql/tasks/main.yml
index 48992e04b4e34..e2c0ede0fb374 100644
--- a/test/integration/targets/postgresql/tasks/main.yml
+++ b/test/integration/targets/postgresql/tasks/main.yml
@@ -203,7 +203,7 @@
     - 'yes'
 
 - set_fact:
-    encryption_values: '{{ encryption_values }} + ["no"]'
+    encryption_values: '{{ encryption_values + ["no"]}}'
   when: postgres_version_resp.stdout is version('10', '<=')
 
 - include: test_password.yml
diff --git a/test/integration/targets/template/corner_cases.yml b/test/integration/targets/template/corner_cases.yml
new file mode 100644
index 0000000000000..48782f79590cd
--- /dev/null
+++ b/test/integration/targets/template/corner_cases.yml
@@ -0,0 +1,51 @@
+- name: test tempating corner cases
+  hosts: localhost
+  gather_facts: false
+  vars:
+    empty_list: []
+    dont: I SHOULD NOT BE TEMPLATED
+    other: I WORK
+  tasks:
+    - name: 'ensure we are not interpolating data from outside of j2 delmiters'
+      assert:
+        that:
+            - '"I SHOULD NOT BE TEMPLATED" not in adjacent'
+            - globals1 == "[[], globals()]"
+            - globals2 == "[[], globals]"
+      vars:
+        adjacent: "{{ empty_list }} + [dont]"
+        globals1: "[{{ empty_list }}, globals()]"
+        globals2: "[{{ empty_list }}, globals]"
+
+    - name: 'ensure we can add lists'
+      assert:
+        that:
+            - (empty_list + [other]) == [other]
+            - (empty_list + [other, other]) == [other, other]
+            - (dont_exist|default([]) + [other]) == [other]
+            - ([other] + [empty_list, other]) == [other, [], other]
+
+    - name: 'ensure comments go away and we still dont interpolate in string'
+      assert:
+        that:
+            - 'comm1 == " + [dont]"'
+            - 'comm2 == " #} + [dont]"'
+      vars:
+        comm1: '{# {{nothing}} {# #} + [dont]'
+        comm2: "{# {{nothing}} {# #} #} + [dont]"
+
+    - name: test additions with facts, set them up
+      set_fact:
+        inames: []
+        iname: "{{ prefix ~ '-options' }}"
+        iname_1: "{{ prefix ~ '-options-1' }}"
+      vars:
+        prefix: 'bo'
+
+    - name: add the facts
+      set_fact:
+        inames: '{{ inames + [iname, iname_1] }}'
+
+    - assert:
+        that:
+            - inames == ['bo-options', 'bo-options-1']
diff --git a/test/integration/targets/template/runme.sh b/test/integration/targets/template/runme.sh
index 4df69c425a04a..2e4e10346c3b4 100755
--- a/test/integration/targets/template/runme.sh
+++ b/test/integration/targets/template/runme.sh
@@ -9,3 +9,6 @@ ansible testhost -i testhost, -m debug -a 'msg={{ hostvars["localhost"] }}' -e "
 
 # Test for https://github.com/ansible/ansible/issues/27262
 ansible-playbook ansible_managed.yml -c  ansible_managed.cfg -i ../../inventory -e @../../integration_config.yml -v "$@"
+
+# Test for several corner cases #57188
+ansible-playbook corner_cases.yml -v "$@"
diff --git a/test/legacy/ovs.yaml b/test/legacy/ovs.yaml
index 4eff414f1de87..35d3acc0fd2f4 100644
--- a/test/legacy/ovs.yaml
+++ b/test/legacy/ovs.yaml
@@ -22,7 +22,7 @@
         when: "limit_to in ['*', 'openvswitch_db']"
       rescue:
         - set_fact:
-            failed_modules: "{{ failed_modules }} + [ 'openvswitch_db' ]"
+            failed_modules: "{{ failed_modules + [ 'openvswitch_db' ]}}"
             test_failed: true
 
 
@@ -33,4 +33,4 @@
     - name: Has any previous test failed?
       fail:
         msg: "One or more tests failed, check log for details"
-      when: test_failed
\ No newline at end of file
+      when: test_failed
