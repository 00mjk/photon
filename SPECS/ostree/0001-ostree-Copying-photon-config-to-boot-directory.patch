From d0e012dbd4958076fc409c23479d46cf0084d534 Mon Sep 17 00:00:00 2001
From: Ankit Jain <ankitja@vmware.com>
Date: Fri, 13 Sep 2019 18:26:26 +0530
Subject: [PATCH 1/2] ostree: Copying photon config to boot directory

Copying photon specific config files to suitable boot directory,
to get the kernel and systemd command line parameter

Signed-off-by: Ajay Kaher <akaher@vmware.com>
Signed-off-by: Ankit Jain <ankitja@vmware.com>
---
 src/libostree/ostree-sysroot-deploy.c | 68 +++++++++++++++++++++++++++
 1 file changed, 68 insertions(+)

diff --git a/src/libostree/ostree-sysroot-deploy.c b/src/libostree/ostree-sysroot-deploy.c
index 8488111..298302b 100644
--- a/src/libostree/ostree-sysroot-deploy.c
+++ b/src/libostree/ostree-sysroot-deploy.c
@@ -991,6 +991,7 @@ ostree_sysroot_write_origin_file (OstreeSysroot         *sysroot,
 
 typedef struct {
   int   boot_dfd;
+  int   ostree_boot_dfd;
   char *kernel_srcpath;
   char *kernel_namever;
   char *kernel_hmac_srcpath;
@@ -998,6 +999,10 @@ typedef struct {
   char *initramfs_srcpath;
   char *initramfs_namever;
   char *devicetree_srcpath;
+  char *systemdcfg_srcpath;
+  char *systemdcfg_namever;
+  char *kernelcfg_srcpath;
+  char *kernelcfg_namever;
   char *devicetree_namever;
   char *bootcsum;
 } OstreeKernelLayout;
@@ -1013,6 +1018,10 @@ _ostree_kernel_layout_free (OstreeKernelLayout *layout)
   g_free (layout->initramfs_namever);
   g_free (layout->devicetree_srcpath);
   g_free (layout->devicetree_namever);
+  g_free (layout->systemdcfg_srcpath);
+  g_free (layout->systemdcfg_namever);
+  g_free (layout->kernelcfg_srcpath);
+  g_free (layout->kernelcfg_namever);
   g_free (layout->bootcsum);
   g_free (layout);
 }
@@ -1181,6 +1190,26 @@ get_kernel_from_tree_usrlib_modules (int                  deployment_dfd,
       ret_layout->kernel_hmac_namever = g_strdup_printf (".%s.hmac", ret_layout->kernel_namever);
     }
 
+/* Setting the param for Copying Photon Specific config files to sutiable location */
+  if (!glnx_opendirat (deployment_dfd, "usr/lib/ostree-boot", FALSE, &ret_layout->ostree_boot_dfd, error))
+       return FALSE;
+  if (!ot_openat_ignore_enoent (ret_layout->ostree_boot_dfd, "photon.cfg", &fd, error))
+    return FALSE;
+  if (fd != -1)
+    {
+      ret_layout->kernelcfg_srcpath = g_strdup_printf ("linux-%s.cfg",kver);
+      ret_layout->kernelcfg_namever = g_strdup ("photon.cfg");
+    }
+  glnx_close_fd (&fd);
+  if (!ot_openat_ignore_enoent (ret_layout->ostree_boot_dfd, "systemd.cfg", &fd, error))
+    return FALSE;
+  if (fd != -1)
+    {
+      ret_layout->systemdcfg_srcpath = g_strdup ("systemd.cfg");
+      ret_layout->systemdcfg_namever = g_strdup ("systemd.cfg");
+    }
+  glnx_close_fd (&fd);
+
   char hexdigest[OSTREE_SHA256_STRING_LEN+1];
   ot_checksum_get_hexdigest (&checksum, hexdigest, sizeof (hexdigest));
   ret_layout->bootcsum = g_strdup (hexdigest);
@@ -1854,6 +1883,33 @@ install_deployment_kernel (OstreeSysroot   *sysroot,
         }
     }
 
+/* Copying Photon Specific config files to sutiable location */
+  if (kernel_layout->kernelcfg_srcpath)
+    {
+      if (!glnx_fstatat_allow_noent (bootcsum_dfd, kernel_layout->kernelcfg_namever, &stbuf, 0, error))
+        return FALSE;
+      if (errno == ENOENT)
+        {
+          if (!install_into_boot (repo, sepolicy, kernel_layout->ostree_boot_dfd, kernel_layout->kernelcfg_srcpath,
+                                                         bootcsum_dfd, kernel_layout->kernelcfg_namever,
+                                                         cancellable, error))
+            return FALSE;
+        }
+    }
+
+  if (kernel_layout->systemdcfg_srcpath)
+    {
+      if (!glnx_fstatat_allow_noent (bootcsum_dfd, kernel_layout->systemdcfg_namever, &stbuf, 0, error))
+        return FALSE;
+      if (errno == ENOENT)
+        {
+          if (!install_into_boot (repo, sepolicy, kernel_layout->ostree_boot_dfd, kernel_layout->systemdcfg_srcpath,
+                                                         bootcsum_dfd, kernel_layout->systemdcfg_namever,
+                                                         cancellable, error))
+           return FALSE;
+        }
+    }
+
   g_autofree char *contents = NULL;
   if (!glnx_fstatat_allow_noent (deployment_dfd, "usr/lib/os-release", &stbuf, 0, error))
     return FALSE;
@@ -1943,6 +1999,18 @@ install_deployment_kernel (OstreeSysroot   *sysroot,
       ostree_kernel_args_replace_take (kargs, g_steal_pointer (&prepare_root_arg));
     }
 
+  if (kernel_layout->systemdcfg_namever)
+    {
+      g_autofree char * boot_relpath = g_strconcat ("/", bootcsumdir, "/", kernel_layout->systemdcfg_namever, NULL);
+      ostree_bootconfig_parser_set (bootconfig, "systemdcfg", boot_relpath);
+    }
+
+  if (kernel_layout->kernelcfg_namever)
+    {
+      g_autofree char * boot_relpath = g_strconcat ("/", bootcsumdir, "/", kernel_layout->kernelcfg_namever, NULL);
+      ostree_bootconfig_parser_set (bootconfig, "kernelcfg", boot_relpath);
+    }
+
   if (kernel_layout->devicetree_namever)
     {
       g_autofree char * boot_relpath = g_strconcat ("/", bootcsumdir, "/", kernel_layout->devicetree_namever, NULL);
-- 
2.23.3

