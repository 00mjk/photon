From 09e0f177917277c226c525e3ec7e04fee4d3d7ff Mon Sep 17 00:00:00 2001
From: Vikash Bansal <bvikas@vmware.com>
Date: Thu, 5 Nov 2020 23:52:07 +0530
Subject: [PATCH] Add path_put to hmac_gen_hash

hmac_gen_hash function is not releasing the opened file
by decreasing the refcount.
Adding path_put api call to decrement ref count.

Signed-off-by: Vikash Bansal bvikas@vmware.com
---
 kernel/hmac_gen.c | 10 ++++++----
 1 file changed, 6 insertions(+), 4 deletions(-)

diff --git a/kernel/hmac_gen.c b/kernel/hmac_gen.c
index 2c2f83f..e685e57 100644
--- a/kernel/hmac_gen.c
+++ b/kernel/hmac_gen.c
@@ -210,21 +210,21 @@ int hmac_gen_hash(crypto_vector_t *crypto_data)
 	ret = vfs_getattr(&path, &stat, STATX_SIZE, 0);
 	if (ret) {
 		printk(KERN_ERR "kernel Read file stats Error\n");
-		goto out;
+		goto out1;
 	}
 	printk(KERN_INFO "File Size = %lld\n", stat.size);
 
 	if (stat.size > MAX_FILE_SIZE) {
 		printk(KERN_ERR "File size exceeded\n");
 		ret = -EFBIG;
-		goto out;
+		goto out1;
 	}
 
 	ret = kernel_read_file_from_path(crypto_data->filepath, &buf, &size,
 					msize, id);
 	if (ret) {
 		printk(KERN_ERR "Loading %s failed with error %d\n", crypto_data->filepath, ret);
-		goto out;
+		goto out1;
 	}
 
 	crypto_data->hash_input = buf;
@@ -232,10 +232,12 @@ int hmac_gen_hash(crypto_vector_t *crypto_data)
 	ret = test_hash(crypto_data);
 	if (ret) {
 		printk(KERN_ERR "test_hash (%s) err %d\n", crypto_data->vector_type, ret);
-		goto out;
+		goto out1;
 	}
 	crypto_data->hash_output[crypto_data->olen] = '\0';
 
+out1:
+	path_put(&path);
 out:
 	if (ret) {
 		memset(crypto_data->hash_output, 0, sizeof(*crypto_data->hash_output));
-- 
2.17.1

