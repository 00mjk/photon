From 25e191ed11a902981b47e459aeb5276987c7b2c2 Mon Sep 17 00:00:00 2001
From: Mounesh Badiger <badigerm@vmware.com>
Date: Tue, 27 Aug 2019 05:14:38 -0700
Subject: [PATCH] Enable cache=loose for vdfs 9p.

cache=loose, helps metadata performance, but due
less photon memory datapath performance regressed.

so only enable loose cache for metadata and datapath
just go through normal zc path.
---
 fs/9p/vfs_file.c        | 24 ++++++++++++++++++++++--
 include/net/9p/client.h |  1 +
 net/9p/client.c         |  6 ++++++
 3 files changed, 29 insertions(+), 2 deletions(-)

diff --git a/fs/9p/vfs_file.c b/fs/9p/vfs_file.c
index 373cc50..3fc3959 100644
--- a/fs/9p/vfs_file.c
+++ b/fs/9p/vfs_file.c
@@ -457,6 +457,26 @@ v9fs_file_write_iter(struct kiocb *iocb, struct iov_iter *from)
 	return err;
 }
 
+static ssize_t
+v9fs_cached_file_read_iter(struct kiocb *iocb, struct iov_iter *to)
+{
+	if (p9_is_fid_proto_dotx(iocb->ki_filp->private_data)) {
+		return v9fs_file_read_iter(iocb, to);
+	}
+
+	return generic_file_read_iter(iocb, to);
+}
+
+static ssize_t
+v9fs_cached_file_write_iter(struct kiocb *iocb, struct iov_iter *from)
+{
+        if (p9_is_fid_proto_dotx(iocb->ki_filp->private_data)) {
+		return v9fs_file_write_iter(iocb, from);
+	}
+
+	return generic_file_write_iter(iocb, from);
+}
+
 static int v9fs_file_fsync(struct file *filp, loff_t start, loff_t end,
 			   int datasync)
 {
@@ -669,8 +689,8 @@ const struct file_operations v9fs_cached_file_operations = {
 
 const struct file_operations v9fs_cached_file_operations_dotl = {
 	.llseek = generic_file_llseek,
-	.read_iter = generic_file_read_iter,
-	.write_iter = generic_file_write_iter,
+	.read_iter = v9fs_cached_file_read_iter,
+	.write_iter = v9fs_cached_file_write_iter,
 	.open = v9fs_file_open,
 	.release = v9fs_dir_release,
 	.lock = v9fs_file_lock_dotl,
diff --git a/include/net/9p/client.h b/include/net/9p/client.h
index fd2c189..49d773d 100644
--- a/include/net/9p/client.h
+++ b/include/net/9p/client.h
@@ -271,6 +271,7 @@ void p9stat_free(struct p9_wstat *);
 
 int p9_is_proto_dotu(struct p9_client *clnt);
 int p9_is_proto_dotl(struct p9_client *clnt);
+int p9_is_fid_proto_dotx(struct p9_fid *fid);
 struct p9_fid *p9_client_xattrwalk(struct p9_fid *, const char *, u64 *);
 int p9_client_xattrcreate(struct p9_fid *, const char *, u64, int);
 int p9_client_readlink(struct p9_fid *fid, char **target);
diff --git a/net/9p/client.c b/net/9p/client.c
index b7db691..8ce4d91 100644
--- a/net/9p/client.c
+++ b/net/9p/client.c
@@ -90,6 +90,12 @@ inline int p9_is_proto_dotx(struct p9_client *clnt)
 }
 EXPORT_SYMBOL(p9_is_proto_dotx);
 
+inline int p9_is_fid_proto_dotx(struct p9_fid *fid)
+{
+   return p9_is_proto_dotx(fid->clnt);
+}
+EXPORT_SYMBOL(p9_is_fid_proto_dotx);
+
 /*
  * Some error codes are taken directly from the server replies,
  * make sure they are valid.
-- 
2.6.2

