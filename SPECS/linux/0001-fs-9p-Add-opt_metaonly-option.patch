From bf176c7db69478b5341d24a79815ef98e906eadd Mon Sep 17 00:00:00 2001
From: Ajay Kaher <akaher@vmware.com>
Date: Thu, 27 Aug 2020 18:00:40 +0530
Subject: [PATCH] fs, 9p: Add opt_metaonly cache option

Read/Write operation of 9p has two executions paths:

metadata: to bypass caching layer:
v9fs_cached_file_read_iter()->v9fs_file_read_iter()
v9fs_cached_file_write_iter()->v9fs_file_write_iter()

datapath: to involve generic caching read/write:
v9fs_cached_file_read_iter()->generic_file_read_iter()
v9fs_cached_file_write_iter()->generic_file_write_iter()

opt_metaonly helps to choose metadata read/write execution
path which bypass caching layer.

By-default opt_metaonly will be unset.

Example: cache=loose, metaonly

Signed-off-by: Ajay Kaher <akaher@vmware.com>
---
 Documentation/filesystems/9p.txt | 2 ++
 fs/9p/v9fs.c                     | 7 +++++++
 fs/9p/v9fs.h                     | 1 +
 3 files changed, 10 insertions(+)

diff --git a/Documentation/filesystems/9p.txt b/Documentation/filesystems/9p.txt
index fec7144..05f48fa 100644
--- a/Documentation/filesystems/9p.txt
+++ b/Documentation/filesystems/9p.txt
@@ -133,6 +133,8 @@ OPTIONS
 		cache tags for existing cache sessions can be listed at
 		/sys/fs/9p/caches. (applies only to cache=fscache)
 
+  metaonly	to bypass caching layer, if cache is loose or mmap
+
 RESOURCES
 =========
 
diff --git a/fs/9p/v9fs.c b/fs/9p/v9fs.c
index 1e9bb8d..705b8ba 100644
--- a/fs/9p/v9fs.c
+++ b/fs/9p/v9fs.c
@@ -59,6 +59,8 @@ enum {
 	Opt_cache_loose, Opt_fscache, Opt_mmap,
 	/* Access options */
 	Opt_access, Opt_posixacl,
+	/* Metadata option: to bypass caching layer */
+	Opt_metaonly,
 	/* Lock timeout option */
 	Opt_locktimeout,
 	/* Error token */
@@ -77,6 +79,7 @@ static const match_table_t tokens = {
 	{Opt_cache_loose, "loose"},
 	{Opt_fscache, "fscache"},
 	{Opt_mmap, "mmap"},
+	{Opt_metaonly, "metaonly"},
 	{Opt_cachetag, "cachetag=%s"},
 	{Opt_access, "access=%s"},
 	{Opt_posixacl, "posixacl"},
@@ -319,6 +322,10 @@ static int v9fs_parse_options(struct v9fs_session_info *v9ses, char *opts)
 			v9ses->session_lock_timeout = (long)option * HZ;
 			break;
 
+		case Opt_metaonly:
+			v9ses->metaonly = true;
+			break;
+
 		default:
 			continue;
 		}
diff --git a/fs/9p/v9fs.h b/fs/9p/v9fs.h
index 3775f27..523e011 100644
--- a/fs/9p/v9fs.h
+++ b/fs/9p/v9fs.h
@@ -101,6 +101,7 @@ struct v9fs_session_info {
 	unsigned short debug;
 	unsigned int afid;
 	unsigned int cache;
+	bool metaonly;
 #ifdef CONFIG_9P_FSCACHE
 	char *cachetag;
 	struct fscache_cookie *fscache;
-- 
2.7.4

