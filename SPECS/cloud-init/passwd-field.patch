From a2362a65617b0356d8a98eca7958f4194c740e9d Mon Sep 17 00:00:00 2001
From: Shreenidhi Shedi <sshedi@vmware.com>
Date: Sun, 2 Aug 2020 23:57:05 +0530
Subject: [PATCH] passwd field patch

Photon provides a way to set password for exisiting user using
'passwd' config in userdata.
cloud-init supports 'passwd' option only for non-existing user
To maintain backward compatibility, this piece of code is added

Check 'GenerateCloudInitConfig' function in 'CustomizationUtils.sh'
in gosc-scripts for the use case

Signed-off-by: Shreenidhi Shedi <sshedi@vmware.com>
---
 cloudinit/distros/__init__.py | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/cloudinit/distros/__init__.py b/cloudinit/distros/__init__.py
index 2b559fe6..2580347c 100755
--- a/cloudinit/distros/__init__.py
+++ b/cloudinit/distros/__init__.py
@@ -520,6 +520,22 @@ class Distro(object):
         if 'snapuser' in kwargs:
             return self.add_snap_user(name, **kwargs)
 
+        """
+        Photon provides a way to set password for exisiting user using
+        'passwd' config in userdata.
+        cloud-init supports 'passwd' option only for non-existing user
+        To maintain backward compatibility, this piece of code is added
+
+        Check 'GenerateCloudInitConfig' function in 'CustomizationUtils.sh'
+        in gosc-scripts for the use case
+        """
+        user_exists = True if util.is_user(name) else False
+        # Set hashed_passwd to passwd if hashed_passwd is not present
+        if (user_exists and 'passwd' in kwargs and kwargs['passwd'] and
+                'hashed_passwd' not in kwargs):
+            kwargs['hashed_passwd'] = kwargs['passwd']
+            kwargs.pop('passwd')
+
         # Add the user
         self.add_user(name, **kwargs)
 
-- 
2.28.0

