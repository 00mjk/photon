commit a023c667c0bdccc5f0b62f65dabb1ac473030e01
Author: Shreenidhi Shedi <sshedi@vmware.com>
Date:   Fri Jul 10 15:41:40 2020 +0530

    fix make check
    
    test_resolv_conf.py takes care of tests after systemd-resolved-config.patch
    test_util.py changes are needed because of instance-dir.patch
    
    Signed-off-by: Shreenidhi Shedi <sshedi@vmware.com>

diff --git a/cloudinit/config/tests/test_resolv_conf.py b/cloudinit/config/tests/test_resolv_conf.py
index f3d97b82..68811208 100644
--- a/cloudinit/config/tests/test_resolv_conf.py
+++ b/cloudinit/config/tests/test_resolv_conf.py
@@ -16,10 +16,10 @@ EXPECTED_HEADER = """\
 class TestGenerateResolvConf:
     @mock.patch("cloudinit.config.cc_resolv_conf.templater.render_to_file")
     def test_default_target_fname_is_etc_resolvconf(self, m_render_to_file):
-        generate_resolv_conf("templates/resolv.conf.tmpl", mock.MagicMock())
+        generate_resolv_conf("templates/systemd.resolved.conf.tmpl", mock.MagicMock())
 
         assert [
-            mock.call(mock.ANY, "/etc/resolv.conf", mock.ANY)
+            mock.call(mock.ANY, "/etc/systemd/resolved.conf", mock.ANY)
         ] == m_render_to_file.call_args_list
 
     @mock.patch("cloudinit.config.cc_resolv_conf.templater.render_to_file")
diff --git a/tests/unittests/test_util.py b/tests/unittests/test_util.py
index e45bedc1..7c9a5477 100644
--- a/tests/unittests/test_util.py
+++ b/tests/unittests/test_util.py
@@ -117,29 +117,29 @@ class TestWriteFile(helpers.TestCase):
         file_stat = os.stat(path)
         self.assertEqual(0o666, stat.S_IMODE(file_stat.st_mode))
 
-    def test_copy_mode_no_existing(self):
-        """Verify that file is created with mode 0o644 if copy_mode
+    def test_preserve_mode_no_existing(self):
+        """Verify that file is created with mode 0o644 if preserve_mode
         is true and there is no prior existing file."""
         path = os.path.join(self.tmp, "NewFile.txt")
         contents = "Hey there"
 
-        util.write_file(path, contents, copy_mode=True)
+        util.write_file(path, contents, preserve_mode=True)
 
         self.assertTrue(os.path.exists(path))
         self.assertTrue(os.path.isfile(path))
         file_stat = os.stat(path)
         self.assertEqual(0o644, stat.S_IMODE(file_stat.st_mode))
 
-    def test_copy_mode_with_existing(self):
+    def test_preserve_mode_with_existing(self):
         """Verify that file is created using mode of existing file
-        if copy_mode is true."""
+        if preserve_mode is true."""
         path = os.path.join(self.tmp, "NewFile.txt")
         contents = "Hey there"
 
         open(path, 'w').close()
         os.chmod(path, 0o666)
 
-        util.write_file(path, contents, copy_mode=True)
+        util.write_file(path, contents, preserve_mode=True)
 
         self.assertTrue(os.path.exists(path))
         self.assertTrue(os.path.isfile(path))
