diff --color -Naurp pam_tacplus-1.4.1-bak/support.c pam_tacplus-1.4.1/support.c
--- pam_tacplus-1.4.1-bak/support.c	2016-07-23 17:33:54.000000000 +0530
+++ pam_tacplus-1.4.1/support.c	2020-08-28 16:39:48.405783660 +0530
@@ -1,5 +1,5 @@
 /* support.c - support functions for pam_tacplus.c
- * 
+ *
  * Copyright (C) 2010, Pawel Krawczyk <pawel.krawczyk@hush.com> and
  * Jeroen Nijhof <jeroen@jeroennijhof.nl>
  *
@@ -188,7 +188,7 @@ int _pam_parse (int argc, const char **a
             ctrl |= PAM_TAC_DEBUG;
         } else if (!strcmp (*argv, "use_first_pass")) {
             ctrl |= PAM_TAC_USE_FIRST_PASS;
-        } else if (!strcmp (*argv, "try_first_pass")) { 
+        } else if (!strcmp (*argv, "try_first_pass")) {
             ctrl |= PAM_TAC_TRY_FIRST_PASS;
         } else if (!strncmp (*argv, "service=", 8)) { /* author & acct */
             xstrcpy (tac_service, *argv + 8, sizeof(tac_service));
@@ -208,7 +208,7 @@ int _pam_parse (int argc, const char **a
         } else if (!strcmp (*argv, "acct_all")) {
             ctrl |= PAM_TAC_ACCT;
         } else if (!strncmp (*argv, "server=", 7)) { /* authen & acct */
-            if(tac_srv_no < TAC_PLUS_MAXSERVERS) { 
+            if(tac_srv_no < TAC_PLUS_MAXSERVERS) {
                 struct addrinfo hints, *servers, *server;
                 int rv;
                 char *close_bracket, *server_name, *port, server_buf[256];
@@ -268,7 +268,7 @@ int _pam_parse (int argc, const char **a
 
             if (tac_timeout < 0) {
                 tac_timeout = 0;
-            } else { 
+            } else {
                 tac_readtimeout_enable = 1;
             }
         } else {
@@ -282,7 +282,17 @@ int _pam_parse (int argc, const char **a
         _pam_log(LOG_DEBUG, "%d servers defined", tac_srv_no);
 
         for(n = 0; n < tac_srv_no; n++) {
-            _pam_log(LOG_DEBUG, "server[%d] { addr=%s, key='%s' }", n, tac_ntop(tac_srv[n].addr->ai_addr), tac_srv[n].key);
+            /*
+             * If journald for syslog is used, the journal is going to store everything,
+             * even DEBUG loglevel messages. Pre-journald logging of system-wide DEBUG
+             * loglevel could be avoided and is not affected in all cases.
+             *
+             * With journald presence it's probably safe to no longer log sensitive
+             * details at DEBUG level.
+             * https://github.com/kravietz/pam_tacplus/commit/4a9852c31c2fd0c0e72fbb689a586aabcfb11cb0
+             */
+            _pam_log(LOG_DEBUG, "server[%lu] { addr=%s, key='********' }", n,
+                    tac_ntop(tac_srv[n].addr->ai_addr));
         }
 
         _pam_log(LOG_DEBUG, "tac_service='%s'", tac_service);
